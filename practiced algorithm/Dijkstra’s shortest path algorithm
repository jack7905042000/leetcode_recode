#include <stdio.h>
#include <limits.h>

#define V 9

int printshortpath(int dis[],int point){
    int i;
    for(i=0;i<V;i++)
        printf("0 to %d = %d\n",i,dis[i]);
}

int Min_dis(int dis[],int book[]){
    int v,min_index;
    int min = INT_MAX;
    for(v=0;v<V;v++){
        if(dis[v]<min && book[v]==0) {
            min = dis[v];
            min_index = v;
        }
    }
    return min_index;//index
}


void dijkstra(int graph[V][V], int start){
    int i,j;
    int book[V];
    int dis[V];
    
    for(i=0;i<V;i++){
        dis[i] = INT_MAX;//initialize
        book[i] = 0;
    }
    
    dis[start] = 0;
    
    for(j=0;j<V;j++){
        
        int u = Min_dis(dis,book);
        book[u]++;
        
        for(i=0;i<V;i++){
            
            if(!book[i] && graph[u][i]!=0 && dis[u]+graph[u][i]<dis[i] && dis[u]!=INT_MAX)
                dis[i] = dis[u]+graph[u][i];
        }
    }
    printshortpath(dis,V);
}

int main()
{
   /* Let us create the example graph discussed above */
   int graph[V][V] = {{0, 5, 0, 0, 0, 0, 0, 8, 0},
                      {4, 0, 8, 0, 0, 0, 0, 11, 0},
                      {0, 8, 0, 7, 0, 4, 0, 0, 2},
                      {0, 0, 7, 0, 9, 14, 0, 0, 0},
                      {0, 0, 0, 9, 0, 10, 0, 0, 0},
                      {0, 0, 4, 14, 10, 0, 2, 0, 0},
                      {0, 0, 0, 0, 0, 2, 0, 1, 6},
                      {8, 11, 0, 0, 0, 0, 1, 0, 7},
                      {0, 0, 2, 0, 0, 0, 6, 7, 0}
                     };
  
    dijkstra(graph, 0);
  
    return 0;
}
