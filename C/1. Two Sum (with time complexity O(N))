/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target) {  
    int min = INT_MAX;  
    int i = 0; 
    
    for (i = 0; i < numsSize; i++) {  
        if (nums[i] < min)  
            min = nums[i];  
    }  
    
    int max = target - min;  
    int len = max - min+1;   //确定hash长度 +1為array長度 
    
    int *hashtable = (int*)malloc(len*sizeof(int));  
    int *indice = (int*)malloc(2*sizeof(int));  
    
    for (i = 0; i < len; i++) hashtable[i] = -1;         //初始hash值=-1  
    
    for (i = 0; i < numsSize; i++) {  
        if (nums[i]<= (target-min)) {  
            if (hashtable[target-nums[i]-min] != -1) {          
                indice[0] = hashtable[target-nums[i] - min];  
                indice[1] = i;  
                return indice;  
            }  
            hashtable[nums[i]-min] = i; 
        }  
    }  
  
    return indice;  
}
